// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
 id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId             String @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
 id     String @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  expires      DateTime
  userId       String @db.ObjectId
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  prompts Prompt[]
}

model VerificationToken {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}


model Prompt{
  id     String @id @default(auto()) @map("_id") @db.ObjectId

  user   User   @relation(fields: [userId], references: [id])
  userId String  @db.ObjectId 

  title String
  content String 

  isdeleted Boolean @default(false)

  hashtagIds String[] @db.ObjectId 
  hashtags Hashtag[] @relation(fields: [hashtagIds],references: [id])
}

model Hashtag{
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  title String @unique

  promptId String[] @db.ObjectId
  prompts Prompt[] @relation(fields: [promptId],references: [id])
}



